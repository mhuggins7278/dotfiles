# User configuration
test -e $HOME/.dotfiles/extra.shell && source $HOME/.dotfiles/extra.shell
#
test -e $HOME/.dotfiles/aliases && source $HOME/.dotfiles/aliases


export EDITOR=nvim
export VISUAL=nvim
export GOPATH=$HOME/Coding/golang
export FZF_DEFAULT_COMMAND="fd --type file --color=always"
export FZF_DEFAULT_OPTS="--ansi"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

export BAT_THEME="Solarized (dark)"
export PNPM_HOME="/Users/MHuggins/Library/pnpm"
export GOPRIVATE="github.com/glg"
export GIT_TERMINAL_PROMPT=1


# export SQL_DEV_USERNAME=$(security find-generic-password -s "SQL_DEV_USERNAME" -w)
# export SQL_DEV_PASSWORD=$(security find-generic-password -s "SQL_DEV_PASSWORD" -w)
# export GITHUB_PACKAGE_REGISTRY_TOKEN=$(security find-generic-password -s "GITHUB_PACKAGE_REGISTRY_TOKEN" -w)
# export GDSWATCH_GITHUB_TOKEN=$(security find-generic-password -s "GITHUB_PACKAGE_REGISTRY_TOKEN" -w)
# export TODOIST_API_KEY=$(security find-generic-password -s "TODOIST_API_KEY" -w)
# export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
#

export BW_PASSWORD=$(security find-generic-password -s "BW_PASSWORD" -w)
export BWS_ACCESS_TOKEN=$(security find-generic-password -s "BWS_ACCESS_TOKEN" -w)
_bws_cache="${XDG_CACHE_HOME:-$HOME/.cache}/zsh/bws"
if [[ ! -f "$_bws_cache" ]] || [[ $(which bws) -nt "$_bws_cache" ]] || [[ -n "$(find "$_bws_cache" -mtime +0)" ]]; then
  bws secret list 61f9a3e0-71a7-4d86-9255-b2a7002e5690 > "$_bws_cache"
fi
SECRETS=$(cat "$_bws_cache")
export BW_CLIENTID=$(echo $SECRETS | jq -r '.[] | select(.key | contains("BW_CLIENTID")).value')
export BW_CLIENTSECRET=$(echo $SECRETS | jq -r '.[] | select(.key | contains("BW_CLIENTSECRET")).value')
export TAVILY_API_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("TAVILY_API_KEY")).value')
export GITHUB_AUTH_TOKEN=$(echo $SECRETS | jq -r '.[] | select(.key | contains("GITHUB_AUTH_TOKEN")).value')
export GLG_GITHUB_TOKEN=$(echo $SECRETS | jq -r '.[] | select(.key | contains("GITHUB_AUTH_TOKEN")).value')
# export ANTHROPIC_API_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("ANTHROPIC_API_KEY")).value')
export OPENAI_API_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("OPENAI_API_KEY")).value')
export CONVERSATIONS_AGENTS_DEV_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("CONVERSATIONS_AGENTS_DEV_KEY")).value')
export AVAILABILITY_UPDATE_OPENAI_API_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("CONVERSATIONS_AGENTS_DEV_KEY")).value')
export ZH_API_KEY=$(echo $SECRETS | jq -r '.[] | select(.key | contains("ZH_API_KEY")).value')
export CSX_ZH_WORKSPACE_ID=5d7a5516d7fbc600019bc8ae


